# Generated by Django 2.2.12 on 2020-04-28 20:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields
import plan.models.course_models
import plan.models.expression_models
import plan.models.section_models
import plan.models.sequence_models
import plan.models.utils_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConditionalExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression_one', djongo.models.fields.EmbeddedField(model_container=plan.models.expression_models.Expression, null=True)),
                ('expression_two', djongo.models.fields.EmbeddedField(model_container=plan.models.expression_models.Expression, null=True)),
                ('condition', models.CharField(choices=[('AND', 'AND'), ('OR', 'OR')], max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', djongo.models.fields.EmbeddedField(model_container=plan.models.utils_models.CourseCode, null=True)),
                ('name', models.CharField(max_length=200)),
                ('credits', models.DecimalField(decimal_places=1, max_digits=3)),
                ('course_details', djongo.models.fields.EmbeddedField(model_container=plan.models.course_models.UVicCourseDetails, null=True)),
                ('requirement', djongo.models.fields.ArrayField(model_container=plan.models.expression_models.Expression)),
            ],
        ),
        migrations.CreateModel(
            name='CourseCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=4)),
                ('number', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='CourseExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', djongo.models.fields.EmbeddedField(model_container=plan.models.utils_models.CourseCode, null=True)),
                ('requisite_type', models.CharField(choices=[('P', 'prerequisite'), ('C', 'corequisite')], max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DateRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ListExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.IntegerField()),
                ('threshold_type', models.CharField(choices=[('LT', 'Less than'), ('LEQ', 'Less than or equal to'), ('EQ', 'Equal to'), ('GEQ', 'Greater than or equal to'), ('GT', 'Greater than')], max_length=3)),
                ('expressions', djongo.models.fields.ArrayField(model_container=plan.models.expression_models.Expression)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', djongo.models.fields.ArrayField(model_container=plan.models.section_models.MeetingDay)),
                ('location', models.CharField(max_length=30)),
                ('date_range', djongo.models.fields.EmbeddedField(model_container=plan.models.utils_models.DateRange, null=True)),
                ('time_range', djongo.models.fields.EmbeddedField(model_container=plan.models.utils_models.TimeRange, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('M', 'Monday'), ('T', 'Tuesday'), ('W', 'Wednesday'), ('R', 'Thursday'), ('F', 'Friday'), ('S', 'Saturday'), ('Z', 'Sunday')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationRestrictionExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', djongo.models.fields.ArrayField(model_container=plan.models.expression_models.Expression)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4)),
                ('section_type', models.CharField(choices=[('lecture', 'Lecture'), ('lab', 'Lab'), ('tutorial', 'Tutorial')], max_length=20)),
                ('crn', models.IntegerField()),
                ('meetings', djongo.models.fields.ArrayField(model_container=plan.models.section_models.Meeting)),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField()),
                ('term_type', models.PositiveSmallIntegerField(choices=[(1, 'Spring Term'), (2, 'Summer Term'), (3, 'Fall Term')])),
                ('courses', djongo.models.fields.ArrayField(model_container=plan.models.course_models.Course)),
            ],
        ),
        migrations.CreateModel(
            name='TimeRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='UnitsExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.IntegerField()),
                ('threshold_type', models.CharField(choices=[('LT', 'Less than'), ('LEQ', 'Less than or equal to'), ('EQ', 'Equal to'), ('GEQ', 'Greater than or equal to'), ('GT', 'Greater than')], max_length=3)),
                ('expressions', djongo.models.fields.ArrayField(model_container=plan.models.expression_models.Expression)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UVicCourseDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours_lectures', models.DecimalField(decimal_places=2, max_digits=4)),
                ('hours_labs', models.DecimalField(decimal_places=2, max_digits=4)),
                ('hours_tutorials', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='YearStandingExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.IntegerField()),
                ('threshold_type', models.CharField(choices=[('LT', 'Less than'), ('LEQ', 'Less than or equal to'), ('EQ', 'Equal to'), ('GEQ', 'Greater than or equal to'), ('GT', 'Greater than')], max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfferingCourse',
            fields=[
                ('course_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='plan.Course')),
                ('sections', djongo.models.fields.ArrayField(model_container=plan.models.section_models.Section)),
            ],
            bases=('plan.course',),
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms', djongo.models.fields.ArrayField(model_container=plan.models.sequence_models.Term)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sections', djongo.models.fields.ArrayField(model_container=plan.models.section_models.Section)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
